apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "labels.selector" . | nindent 6 }}
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        {{- include "labels.common" . | nindent 8 }}
    spec:
      priorityClassName: giantswarm-critical
      containers:
      - name: {{ .Values.name }}
        image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        args:
        - '--port={{ .Values.port }}'
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.port }}
          initialDelaySeconds: 5
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.port }}
          initialDelaySeconds: 5
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 500m
            memory: 500Mi
      serviceAccountName: {{ .Values.name }}
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
